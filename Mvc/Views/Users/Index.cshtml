@using Mvc.Extensions
@using Sieve.Models
@model Dto.Contracts.PagingResponse<Dto.Contracts.UserContracts.UserResponse>


@{
    ViewData["Title"] = "Index";
}

<h1>Users</h1>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name:
            <input type="text" name="SearchString" value="@((ViewData["CurrentSieve"] as SieveModel)?.GetFiltersParsed()?.Single()?.Names[0] ?? "")"/>
            <input type="submit" value="Search" class="btn btn-primary"/> |
            <a asp-action="Index">Back to full List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
    <tr>
        <th>
            <a asp-action="Index"
               asp-route-sorts="@ViewData["Name"]"
               asp-route-filters="@(((SieveModel) ViewData["CurrentSieve"]).Filters)"
               asp-route-page="@(((SieveModel) ViewData["CurrentSieve"]).Page)"
               asp-route-pagesize="@(((SieveModel) ViewData["CurrentSieve"]).PageSize)">
                @Html.DisplayNameFor(model => model.Items[0].Name)
            </a>
        </th>
        <th>
            <a asp-action="Index"
               asp-route-sorts="@ViewData["Email"]"
               asp-route-filters="@(((SieveModel) ViewData["CurrentSieve"]).Filters)"
               asp-route-page="@(((SieveModel) ViewData["CurrentSieve"]).Page)"
               asp-route-pagesize="@(((SieveModel) ViewData["CurrentSieve"]).PageSize)">
                @Html.DisplayNameFor(model => model.Items[0].Email)
            </a>
        </th>
        <th>
            <a asp-action="Index"
               asp-route-sorts="@ViewData["AdsCount"]"
               asp-route-filters="@(((SieveModel) ViewData["CurrentSieve"]).Filters)"
               asp-route-page="@(((SieveModel) ViewData["CurrentSieve"]).Page)"
               asp-route-pagesize="@(((SieveModel) ViewData["CurrentSieve"]).PageSize)">
                @Html.DisplayNameFor(model => model.Items[0].AdsCount)
            </a>
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Items)
    {
        <tr>
            <td>
                <a asp-action="Details" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Name)</a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AdsCount)
            </td>
        </tr>
    }
    </tbody>
</table>
<nav aria-label="Page navigation example">
    <span class="container text-muted">Total user: @Model.Count</span>
    
    <div class="custom-control custom-radio custom-control-inline">
        <input type="radio" id="PageSize1" name="PageSize" class="custom-control-input" checked>
        <label class="custom-control-label" for="PageSize1">10</label>
    </div>
    <div class="custom-control custom-radio custom-control-inline">
        <input type="radio" id="PageSize2" name="PageSize" class="custom-control-input">
        <label class="custom-control-label" for="PageSize2">50</label>
    </div>
    <div class="custom-control custom-radio custom-control-inline">
        <input type="radio" id="PageSize3" name="PageSize" class="custom-control-input">
        <label class="custom-control-label" for="PageSize3">100</label>
    </div>
    
    <ul class="pagination justify-content-center">
        <li class="page-item disabled">
            <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Previous</a>
        </li>
        <li class="page-item">
            <a class="page-link" href="#">1</a>
        </li>
        <li class="page-item">
            <a class="page-link" href="#">2</a>
        </li>
        <li class="page-item">
            <a class="page-link" href="#">3</a>
        </li>
        <li class="page-item">
            <a class="page-link" href="#">Next</a>
        </li>
    </ul>
</nav>